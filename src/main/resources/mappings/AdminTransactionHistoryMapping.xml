<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AdminTransactionHistoryDAO">

	<resultMap type="adminTransactionHistory" id="adminResult">
		<result property="transaction_seq" column="TRANSACTION_SEQ" />
		<result property="email_id" column="EMAIL_ID" />
		<result property="product_name" column="PRODUCT_NAME" />
		<result property="transaction_price" column="TRANSACTION_PRICE" />
		<result property="trasaction_count" column="TRANSACTION_COUNT" />
		<result property="date" column="DATE" />
		<result property="merchant_uid" column="MERCHANT_UID" />
		<result property="product_price" column="PRODUCT_PRICE" />
		<result property="request" column="REQUEST" />
		<result property="address2" column="ADDRESS2" />
		<result property="status" column="STATUS" />
		<result property="cancel_date" column="CANCEL_DATE" />
		<result property="cancel_status" column="CANCEL_STATUS" />
		<result property="cancel_reason" column="CANCEL_REASON" />
		<result property="pay_cancel" column="PAY_CANCEL" />
	</resultMap>
	
	<select id="getTransitionAllList" resultType="adminTransactionHistory">
		SELECT * FROM transactionHistory WHERE pay_cancel is null OR status = '상품 배송 완료'
	</select>
	
	<select id="getTransitionStatusList" parameterType="String" resultType="adminTransactionHistory">
		SELECT * FROM transactionHistory
		<if test="status != '상품 배송 완료'">
			WHERE status = #{status} and pay_cancel is null;
		</if>
		<if test="pay_cancel == '취소 처리 중' or status == '상품 배송 완료'">
			WHERE status = #{status}
		</if>
	</select>
	
	<select id="getTransitionCancelList" parameterType="String" resultType="adminTransactionHistory">
		SELECT * FROM transactionHistory WHERE pay_cancel = #{pay_cancel}
	</select>
	
	<select id="getTransitionAllCancelList" resultType="adminTransactionHistory">
		SELECT * FROM transactionHistory WHERE pay_cancel != '취소 완료' and pay_cancel !='반품 완료' and pay_cancel is not null;
	</select>
	
	<update id="updatePayCancel" parameterType="int">
		UPDATE transactionHistory SET pay_cancel = '취소 완료', status = null WHERE transaction_seq = #{transaction_seq};
	</update>
	
	<update id="updateExchangeCount" parameterType="int">
		UPDATE transactionHistory SET exchange_count = exchange_count + 1, status = '상품 준비 중', cancel_date = null, pay_cancel = null, cancel_status = null, cancel_reason = null WHERE transaction_seq = #{transaction_seq}
	</update>
	
	<update id="updateStatus" parameterType="adminTransactionHistory">
		UPDATE transactionHistory SET status = #{status} WHERE transaction_seq = #{transaction_seq}
	</update>
	
	<update id="updateRefund" parameterType="int">
		UPDATE transactionHistory SET pay_cancel = '반품 완료', status = null WHERE transaction_seq = #{transaction_seq}
	</update>
	
	<select id="getSelectOne" parameterType="int" resultType="adminTransactionHistory">
		SELECT * FROM transactionHistory WHERE transaction_seq = #{transaction_seq}
	</select>
	
	<select id="getStatus" resultType="string">
		SELECT DISTINCT(status) FROM transactionHistory WHERE status is not null
	</select>
	
	<select id="getCancelComplete" resultType="adminTransactionHistory">
		SELECT * FROM transactionHistory WHERE pay_cancel = '취소 완료'
	</select>
	
	<select id="getRefundComplete" resultType="adminTransactionHistory">
		SELECT * FROM transactionHistory WHERE pay_cancel = '반품 완료'
	</select>
	
	<select id="getCancelRefundComplete" resultType="adminTransactionHistory">
		SELECT * FROM transactionHistory WHERE pay_cancel = '취소 완료' or pay_cancel = '반품 완료'
	</select>
	
	<select id="getTotalPrice" resultType="int">
		SELECT SUM(transaction_price) FROM transactionHistory;
	</select>
	
	<select id="orderList" resultType="adminTransactionHistory">
		SELECT * FROM transactionHistory
	</select>
	
	<select id="getCountTopFive" resultType="adminTransactionHistory">
		SELECT product_name, sum(transaction_count) AS transaction_count FROM transactionHistory GROUP BY product_name, transaction_count ORDER BY 2 DESC LIMIT 5;
	</select>
</mapper>