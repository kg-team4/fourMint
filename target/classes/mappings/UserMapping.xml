<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserDAO">

	<resultMap type="user" id="userResult">
		<result property="email_id" column="EMAIL_ID" />
		<result property="password" column="PASSWORD" />
		<result property="name" column="NAME" />
		<result property="nickname" column="NICKNAME" />
		<result property="phone" column="PHONE" />
		<result property="address1" column="ADDRESS1" />
		<result property="address2" column="ADDRESS2" />
		<result property="address3" column="ADDRESS3" />
		<result property="birth" column="BIRTH" />
		<result property="gender" column="GENDER" />
		<result property="social_login" column="SOCIAL_LOGIN"/>
		<result property="snsid" column="SNSID"/>
		<result property="profile" column="PROFILE" />
		<result property="date" column="DATE" />
		<result property="delete_date" column="DELETE_DATE"/>
	</resultMap>
	
	<insert id="insertUser" parameterType="user">
		INSERT INTO member (email_id, password, name, nickname, address1, address2, address3, phone, birth, gender) 
		VALUES (#{email_id}, #{password}, #{name}, #{nickname}, #{address1}, #{address2}, #{address3}, #{phone}, #{birth}, #{gender})
	</insert>
	
	<insert id="insertNaver" parameterType="user">
		INSERT INTO member (email_id, phone, birth, gender, social_login, snsid) 
		VALUES (#{email}, #{phone}, #{birth}, #{gender}, #{social_login}, #{naverid})
	</insert>
	
	<insert id="insertKakao" parameterType="user">
		INSERT INTO member (email_id, birth, nickname, gender, social_login, snsid) 
		VALUES (#{email}, #{birth}, #{nickname}, #{gender}, #{social_login}, #{kakaoid})  
	</insert>
	
	<select id="getUser" resultType="user">
		SELECT * FROM member WHERE email_id = #{email_id} 
	</select>
	
	<select id="getUserFromNickname" resultType="user" parameterType="string">
		SELECT * FROM member WHERE nickname = #{nickname}
	</select>
	
	<select id="getUserFromPhone" resultType="user" parameterType="string">
		SELECT * FROM member WHERE phone = #{phone}
	</select>
	
	<select id="getUserFromEmail" resultType="user" parameterType="string">
		SELECT * FROM member WHERE email_id = #{email}
	</select>
	
	<select id="getAddress1" resultType="string">
		SELECT address1 FROM member WHERE email_id = #{email_id}
	</select>
	
	<select id="getAddress2" resultType="string">
		<choose>
			<when test="email_id == null">
				SELECT address2 FROM member WHERE email_id = #{email_id}
			</when>
			<otherwise>
				SELECT address2 FROM member
			</otherwise>
		</choose>
	</select>
	
	<select id="getAddress3" resultType="string">
		SELECT address3 FROM member WHERE email_id = #{email_id}
	</select>

	<select id="idCheck" resultType="int" parameterType="String">
		SELECT COUNT(email_id) FROM member WHERE email_id = #{email_id}
	</select>

	<select id="nickCheck" resultType="int" parameterType="String">
		SELECT COUNT(nickname) FROM member WHERE nickname = #{nickname}
	</select>
	
	<select id="phoneCheck" resultType="int" parameterType="String">
		SELECT COUNT(phone) FROM member WHERE phone = #{phone}
	</select>
	
	<select id="getByNaver" resultType="String" parameterType="String">
		SELECT snsid FROM member WHERE snsid = #{naverid}
	</select>

	<select id="getBySns" resultType="String" parameterType="String">
		SELECT social_login FROM member WHERE email_id = #{email}
	</select>
	
	<select id="updateAddress" parameterType="String">
		UPDATE member SET address1 = #{address1}, address2 = #{address2}, address3 = #{address3} where email_id = #{email_id} 
	</select>
	
	<select id="getPw" resultType="String" parameterType="String">
		SELECT password FROM member WHERE email_id = #{email_id} and name = #{name} and phone = #{phone} 
	</select>
	
	<select id="updatePw" parameterType="String">
		UPDATE member SET password = #{password} WHERE email_id = #{email_id} 
	</select>

	<update id="updateProfile" parameterType="user">
		UPDATE member SET profile = #{profile} WHERE nickname = #{nickname}
	</update>
	
	<select id="getPassword" resultType="string" parameterType="string">
		SELECT password FROM member WHERE email_id = #{email_id}
	</select>
	
	<select id="getRating" resultType="float" parameterType="string">
		SELECT rating FROM member WHERE nickname = #{userNickname}
	</select>
	
	<update id="updateRating" parameterType="user">
		UPDATE member SET rating = #{rating} WHERE nickname = #{nickname}	
	</update>
	
	<resultMap type="report" id="reportResult">
		<result property="report_seq" column="REPORT_SEQ"/>
		<result property="reason" column="REASON" />
		<result property="content" column="CONTENT" />
		<result property="market_seq" column="MARKET_SEQ" />
		<result property="reporter" column="REPORTER" />
		<result property="reported" column="REPORTED" />
		<result property="date" column="DATE"/>
	</resultMap>
	
	<insert id="insertReport" parameterType="four.mint.web.user.board.common.ReportVO">
		INSERT INTO report VALUES(DEFAULT, #{reason}, #{content}, #{market_seq}, #{reporter}, #{reported})
	</insert>
	
	<update id="updateReport" parameterType="string">
		UPDATE member SET reports = reports + 1 WHERE nickname = #{reported}
	</update>
		
	<select id="updateDate">
		UPDATE member SET delete_date = now() WHERE email_id = #{id}
	</select>
	
	<select id="insertDel">
		INSERT INTO deleteMember SELECT * FROM member WHERE email_id = #{id}
	</select>
	
	<select id="dropMem">
		DELETE FROM member WHERE email_id = #{id} 
	</select>
	
	<select id="updateSns" parameterType="user">
		UPDATE member SET (name, nickname, address1, address2, address3, phone, birth) 
		= (#{name}, #{nickname}, #{address1}, #{address2}, #{address3}, #{phone}, #{birth}) where email_id = #{email_id}
	</select>

	<select id="getAdminBirth" resultType="String" >
		SELECT birth FROM member WHERE birth is not null	
	</select>
	
	<select id="getAddressList" resultType="String" >
		SELECT address2 FROM member WHERE address2 is not null	
	</select>
	 
	<select id="getMem" parameterType="string" resultType="user">
		SELECT * FROM member WHERE email_id = #{email}
	</select>
	
	<select id="getUserCount" resultType="int">
		SELECT COUNT(email_id) FROM member;
	</select>
	
	<select id="getId" parameterType="user" resultType="string">
		SELECT email_id FROM member WHERE name = #{name} and phone = #{phone}
	</select>
</mapper>